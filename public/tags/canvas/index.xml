<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Canvas on My New Hugo Site</title>
    <link>http://example.org/tags/canvas/</link>
    <description>Recent content in Canvas on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/tags/canvas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to create glowing particles in canvas</title>
      <link>http://example.org/bytes/canvas-glowing-particles/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/bytes/canvas-glowing-particles/</guid>
      <description>Create glowing particles in canvas.
Particle.js:
(function(root) { &#39;use strict&#39;; function Particle(options) { var defaults = { ttl: 8000, maxXSpeed: 5, maxYSpeed: 2, maxRadius: 20, xVelocity: 4, yVelocity: 4, random: false, blink: true, speed: 30, containerWidth: window.innerWidth, containerHeight: window.innerHeight, context: null }; var settings = merge(defaults, options); for (var name in settings) { this[name] = settings[name]; } this.xStart = this.containerWidth / 2; this.yStart = this.containerHeight / 2; if (!(this.context instanceof Object)) { throw new Error(&#39;Canvas `context` is required.</description>
    </item>
    
    <item>
      <title>Pixelate images with Canvas</title>
      <link>http://example.org/blog/pixelate-images-with-canvas/</link>
      <pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/blog/pixelate-images-with-canvas/</guid>
      <description>There may be cases in which you want to pixelate an image, such as creating 8-bit style pixel art themed games or you simply want to give a hint of what an image is about without exposing too much. Turns out that it&amp;rsquo;s not complicated at all to do pixelation with canvas.

View demo Â»
The main methods needed from the canvas context are imageSmoothingEnabled for rendering crisp pixels and drawImage for drawing those pixels on to the canvas context.</description>
    </item>
    
  </channel>
</rss>